{"version":3,"sources":["components/PageNotFound.tsx","HomePage/HomePage.tsx","components/Loader/Loader.tsx","components/PersonLink.tsx","api.ts","PeoplePage/PeoplePage.tsx","App.tsx","index.tsx"],"names":["PageNotFound","className","HomePage","Loader","PersonLink","personName","findPerson","people","find","human","name","to","slug","classNames","sex","getPeople","delay","Promise","resolve","setTimeout","then","fetch","response","json","PeoplePage","useState","setPeople","isError","setIsError","isLoading","setIsLoading","personSlug","useParams","useEffect","catch","finally","length","map","person","born","died","motherName","fatherName","App","role","isActive","index","element","path","replace","createRoot","document","getElementById","render"],"mappings":"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","file":"static/js/main.fa39947d.chunk.js","sourcesContent":["import React from 'react';\n\nimport '../App.scss';\n\nexport const PageNotFound: React.FC = () => (\n  <h1 className=\"title\">Page not found</h1>\n);\n","import React from 'react';\n\nimport '../App.scss';\n\nexport const HomePage: React.FC = () => (\n  <h1 className=\"title\">Home Page</h1>\n);\n//\n","import './Loader.scss';\n\nexport const Loader = () => (\n  <div className=\"Loader\" data-cy=\"loader\">\n    <div className=\"Loader__content\" />\n  </div>\n);\n//\n","import { Link } from 'react-router-dom';\nimport classNames from 'classnames';\nimport React from 'react';\n\nimport '../App.scss';\nimport { Person } from '../types';\n\ntype Props = {\n  personName: string,\n  people: Person[],\n};\n\nexport const PersonLink: React.FC<Props> = ({ personName, people }) => {\n  const findPerson = people.find(human => human.name === personName);\n\n  return (\n    findPerson ? (\n      <Link\n        to={`/people/${findPerson.slug}`}\n        className={classNames({\n          'has-text-danger': findPerson.sex === 'f',\n        })}\n      >\n        {personName}\n      </Link>\n    ) : (\n      <span>\n        {personName}\n      </span>\n    )\n  );\n};\n","import { Person } from './types/Person';\n\n// eslint-disable-next-line max-len\nconst API_URL = 'https://mate-academy.github.io/react_people-table/api/people.json';\n\nfunction wait(delay: number) {\n  return new Promise(resolve => setTimeout(resolve, delay));\n}\n\nexport function getPeople(): Promise<Person[]> {\n  // keep this delay for testing purpose\n  return wait(500)\n    .then(() => fetch(API_URL))\n    .then(response => response.json());\n}\n//\n","import React, { useEffect, useState } from 'react';\nimport { useParams } from 'react-router-dom';\nimport classNames from 'classnames';\n\nimport { Loader } from '../components/Loader';\nimport { PersonLink } from '../components/PersonLink';\n\nimport { getPeople } from '../api';\nimport { Person } from '../types';\n\nimport '../App.scss';\n\nexport const PeoplePage: React.FC = () => {\n  const [people, setPeople] = useState<Person[]>([]);\n  const [isError, setIsError] = useState(false);\n  const [isLoading, setIsLoading] = useState(false);\n  const { personSlug } = useParams();\n\n  useEffect(() => {\n    setIsLoading(true);\n    setIsError(false);\n\n    getPeople()\n      .then((response) => {\n        setPeople(response);\n      })\n      .catch(() => {\n        setIsError(true);\n      })\n      .finally(() => {\n        setIsLoading(false);\n      });\n  }, []);\n\n  return (\n    <>\n      <h1 className=\"title\">People Page</h1>\n\n      <div className=\"block\">\n        <div className=\"box table-container\">\n          {isLoading && <Loader />}\n\n          {isError && (\n            <p data-cy=\"peopleLoadingError\" className=\"has-text-danger\">\n              Something went wrong\n            </p>\n          )}\n\n          {people.length === 0 && !isLoading && (\n            <p data-cy=\"noPeopleMessage\">\n              There are no people on the server\n            </p>\n          )}\n\n          {people.length >= 0 && !isLoading && (\n            <table\n              data-cy=\"peopleTable\"\n              className=\"table is-striped is-hoverable is-narrow is-fullwidth\"\n            >\n              <thead>\n                <tr>\n                  <th>Name</th>\n                  <th>Sex</th>\n                  <th>Born</th>\n                  <th>Died</th>\n                  <th>Mother</th>\n                  <th>Father</th>\n                </tr>\n              </thead>\n\n              <tbody>\n                {people.map(person => {\n                  return (\n                    <tr\n                      key={person.slug}\n                      data-cy=\"person\"\n                      className={classNames({\n                        'has-background-warning': personSlug === person.slug,\n                      })}\n                    >\n                      <td>\n                        <PersonLink\n                          personName={person.name}\n                          people={people}\n                        />\n                      </td>\n\n                      <td>{person.sex}</td>\n                      <td>{person.born}</td>\n                      <td>{person.died}</td>\n                      <td>\n                        {person.motherName ? (\n                          <PersonLink\n                            personName={person.motherName}\n                            people={people}\n                          />\n                        ) : '-'}\n                      </td>\n                      <td>\n                        {person.fatherName ? (\n                          <PersonLink\n                            personName={person.fatherName}\n                            people={people}\n                          />\n                        ) : '-'}\n                      </td>\n                    </tr>\n                  );\n                })}\n              </tbody>\n            </table>\n          )}\n        </div>\n      </div>\n    </>\n  );\n};\n","import React from 'react';\nimport {\n  Navigate, NavLink, Route, Routes,\n} from 'react-router-dom';\nimport classNames from 'classnames';\n\nimport { PageNotFound } from './components/PageNotFound';\nimport { HomePage } from './HomePage/HomePage';\nimport { PeoplePage } from './PeoplePage/PeoplePage';\n\nimport './App.scss';\n\nexport const App: React.FC = () => (\n  <div data-cy=\"app\">\n    <nav\n      data-cy=\"nav\"\n      className=\"navbar is-fixed-top has-shadow\"\n      role=\"navigation\"\n      aria-label=\"main navigation\"\n    >\n      <div className=\"container\">\n        <div className=\"navbar-brand\">\n          <NavLink\n            className={({ isActive }) => classNames('navbar-item', {\n              'has-background-grey-lighter': isActive,\n            })}\n            to=\"/\"\n          >\n            Home\n          </NavLink>\n\n          <NavLink\n            className={({ isActive }) => classNames('navbar-item', {\n              'has-background-grey-lighter': isActive,\n            })}\n            to=\"/people\"\n          >\n            People\n          </NavLink>\n        </div>\n      </div>\n    </nav>\n\n    <main className=\"section\">\n      <div className=\"container\">\n        <Routes>\n          <Route index element={<HomePage />} />\n\n          <Route path=\"/people\">\n            <Route index element={<PeoplePage />} />\n            <Route path=\"/people/:personSlug\" element={<PeoplePage />} />\n          </Route>\n\n          <Route path=\"/home\" element={<Navigate replace to=\"/\" />} />\n\n          <Route path=\"*\" element={<PageNotFound />} />\n        </Routes>\n      </div>\n    </main>\n  </div>\n);\n","import { createRoot } from 'react-dom/client';\nimport { HashRouter } from 'react-router-dom';\n\nimport 'bulma/css/bulma.css';\nimport '@fortawesome/fontawesome-free/css/all.css';\n\nimport { App } from './App';\n\ncreateRoot(document.getElementById('root') as HTMLDivElement)\n  .render(\n    <HashRouter>\n      <App />\n    </HashRouter>,\n  );\n"],"sourceRoot":""}